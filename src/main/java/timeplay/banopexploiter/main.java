package timeplay.banopexploiter;

import org.bukkit.entity.Player;
import org.bukkit.event.Event;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.player.*;
import org.bukkit.plugin.java.JavaPlugin;
import org.bukkit.scheduler.BukkitRunnable;

public final class main extends JavaPlugin implements Listener {

    @Override
    public void onEnable() {
        System.out.println("BanOPExploiter is enabled!");
        getServer().getPluginManager().registerEvents(this, this);
        saveDefaultConfig();
    }

    @Override
    public void onDisable() {
        if (!(getConfig().getString("when-plugin-disabled-command").equalsIgnoreCase("nothing"))) {
            getServer().dispatchCommand(getServer().getConsoleSender(), getConfig().getString("when-plugin-disabled-command"));
        }
    }

    @EventHandler
    public void onJoin(PlayerJoinEvent e) {
        new BukkitRunnable() {
            public void run() {
                if (e.getPlayer().isOnline()) {
                    ban(e.getPlayer(), e);
                } else {
                    cancel();
                }
            }
        }.runTaskTimer(this,0,20*getConfig().getInt("check-every-seconds"));
    }

    public void ban(Player player, Event e) {
        if (getConfig().getBoolean("ban-if-have.op") && player.isOp() && (!(getConfig().getStringList("allowed-players-list").contains(player.getName())))) {
            int sizik = getConfig().getStringList("ban-commands").size();
            if (sizik > 0) {
                for (int siz = 0; siz < sizik; siz++) {
                    getServer().dispatchCommand(getServer().getConsoleSender(), getConfig().getStringList("ban-commands").get(siz).replace("%player%", player.getName()).replace("%op-or-perm%","OP"));
                }
            } else {
                System.out.println("ban-commands is not detected. Please fill list 'ban-commands:' with '- ''ban %player% Exploit'' ' ");
            }
        } else if (getConfig().getBoolean("ban-if-have.perms") && (!(getConfig().getStringList("allowed-players-list").contains(player.getName())))) {
            int S = getConfig().getStringList("ban-if-have.perms-list").size();
            if (S > 0) {
                for (int I = 0; I < S; I++) {
                    if (player.hasPermission(getConfig().getStringList("ban-if-have.perms-list").get(I))) {
                        int sizik = getConfig().getStringList("ban-commands").size();
                        if (sizik > 0) {
                            for (int siz = 0; siz < sizik; siz++) {
                                getServer().dispatchCommand(getServer().getConsoleSender(), getConfig().getStringList("ban-commands").get(siz).replace("%player%", player.getName()).replace("%op-or-perm%", "perm"));
                            }
                        } else {
                            System.out.println("ban-commands is not detected. Please fill list 'ban-commands:' with '- ''ban %player% Exploit'' ' ");
                        }
                    }
                }
            } else {
                System.out.println("perms-list is not detected. Please fill list 'perms-list:' with '- ''worldedit.*'' ' ");
            }
        }
    }
}
